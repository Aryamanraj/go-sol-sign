name: Build and Release

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Verify dependencies
      run: go mod verify
    
    - name: Build
      run: go build -v ./...
    
    - name: Run tests
      run: go test -v ./...
    
    - name: Run go vet
      run: go vet ./...
    
    - name: Install staticcheck
      run: go install honnef.co/go/tools/cmd/staticcheck@latest
    
    - name: Run staticcheck
      run: staticcheck ./...

  build:
    needs: test
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Get version
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
    
    - name: Build release
      run: ./build-release.sh
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ steps.version.outputs.VERSION }}
        draft: false
        prerelease: false
        body: |
          ## Sol-Sign ${{ steps.version.outputs.VERSION }}
          
          A lightweight command-line tool for signing messages with Solana keypairs.
          
          ### Installation
          
          Download the appropriate binary for your system:
          
          - **Linux (x64)**: `sol-sign_${{ steps.version.outputs.VERSION }}_linux_amd64.tar.gz`
          - **Linux (ARM64)**: `sol-sign_${{ steps.version.outputs.VERSION }}_linux_arm64.tar.gz`
          - **macOS (Intel)**: `sol-sign_${{ steps.version.outputs.VERSION }}_darwin_amd64.tar.gz`
          - **macOS (Apple Silicon)**: `sol-sign_${{ steps.version.outputs.VERSION }}_darwin_arm64.tar.gz`
          - **Windows (x64)**: `sol-sign_${{ steps.version.outputs.VERSION }}_windows_amd64.zip`
          - **Windows (ARM64)**: `sol-sign_${{ steps.version.outputs.VERSION }}_windows_arm64.zip`
          
          ### Usage
          
          ```bash
          sol-sign -keypair <path> -message <message> [-format base64|hex]
          ```
          
          ### Verification
          
          Verify downloads using the provided `checksums.txt` file:
          
          ```bash
          sha256sum -c checksums.txt
          ```
    
    - name: Upload Release Assets
      run: |
        for file in dist/*.tar.gz dist/*.zip dist/checksums.txt; do
          if [ -f "$file" ]; then
            echo "Uploading $file"
            gh release upload ${{ steps.version.outputs.VERSION }} "$file"
          fi
        done
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
